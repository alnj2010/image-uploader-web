name: Deploy to Vercel - Preview and Production Enviroment
env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
    types: [opened, synchronize]

  workflow_dispatch:

jobs:
  Avoid_Redundancy:
    runs-on: ubuntu-latest
    steps:
      - name: Cancel Previous Redundant Builds
        uses: styfle/cancel-workflow-action@0.9.1
        with:
          access_token: ${{ github.token }}

  Check_ESLint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-deep: 0
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: "18"
          cache: npm
      - name: Install dependencies
        run: npm ci
      - name: run ESlint
        run: npm run lint

  Check_Build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-deep: 0
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: "18"
          cache: npm
      - name: Install dependencies
        run: npm ci
      - name: run build
        run: npm run build

  Check_Test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-deep: 0
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: "18"
          cache: npm
      - name: Install dependencies
        run: npm ci
      - name: run tests
        run: npm run test:ci

  Deploy-Preview:
    if: ${{github.event_name == 'pull_request'}}
    needs: [Check_ESLint, Check_Build, Check_Test]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install Vercel CLI
        run: npm install --global vercel@latest
      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}
      - name: Build Project Artifacts
        run: vercel build --token=${{ secrets.VERCEL_TOKEN }}
      - name: Deploy Project Artifacts to Vercel
        run: vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }}

  Deploy-Production:
    if: ${{github.event_name == 'push'}}
    needs: [Check_ESLint, Check_Build, Check_Test]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install Vercel CLI
        run: npm install --global vercel@canary
      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}
      - name: Build Project Artifacts
        run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}
      - name: Deploy Project Artifacts to Vercel
        run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}
